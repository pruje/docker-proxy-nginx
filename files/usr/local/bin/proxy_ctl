#!/bin/bash
#
#  Proxy controller
#

usage() {
	echo "proxy_ctl [OPTIONS] COMMAND"
	echo "Options:"
	echo "   -q, --quiet  Silent mode"
	echo "   -h, --help   Print this help"
	echo "Commands:"
	echo "   test     Test config"
	echo "   reload   Reload ngnix (will be tested before)"
}


print() {
	$quiet_mode && return 0
	echo "$*"
}


result() {
	local res=$?
	[ -n "$1" ] && res=$1

	if [ $res = 0 ] ; then
		print "... ok"
	else
		print "... FAILED (exit code: $res)"
	fi

	return $res
}


get_config() {
	grep -E "^\s*$2\s+" "$1" | tail -n 1 | sed "s/^.*$2\s+//; s/;$//"
}


ctl_test() {
	local output res quiet=false

	[ "$1" = "-q" ] && quiet=true

	$quiet || print "Test config..."

	output=$(nginx -t 2>&1)
	res=$?

	[ $res = 0 ] && result $res

	echo "$output" | grep 'host not found in upstream' && res=2

	# print unreachable configs
	if ! $quiet ; then
		for f in /etc/nginx/conf.d/*.unreachable ; do
			[ -f "$f" ] && echo "[INFO] disabled config file: $f"
		done
	fi

	echo "$output"
	return $res
}


ctl_reload() {
	print "Reload nginx..."
	nginx -s reload
	result
}


cmd_test() {
	ctl_test
}


cmd_reload() {
	ctl_test && ctl_reload
}


cmd_maintenance() {
	cd /etc/nginx/conf.d || return 1

	local conf=$(basename "$1")
	if ! [ -f "$conf" ] ; then
		usage
		return 1
	fi

	local renamed=.$conf.maintenance
	if [ -f "$renamed" ] ; then
		echo "already in maintenance"
		return 0
	fi

	mv "$conf" "$renamed"

	local ssl_certificate=$(get_config "$renamed" ssl_certificate)
	local ssl_certificate_key=$(get_config "$renamed" ssl_certificate_key)

	if [ -z "$ssl_certificate" ] || [ -z "$ssl_certificate_key" ] ; then
		cmd_reload
		return 0
	fi

	cp /etc/nginx/maintenance.conf "$conf" && \
	sed -i "s|ssl_certificate .*|ssl_certificate $ssl_certificate;|; s|ssl_certificate_key .*|ssl_certificate_key $ssl_certificate_key;|" "$conf" && \
	cmd_reload
}


cmd_online() {
	cd /etc/nginx/conf.d || return 1

	local conf=$(basename "$1")
	if ! [ -f "$conf" ] ; then
		usage
		return 1
	fi

	local renamed=.$conf.maintenance
	if ! [ -f "$renamed" ] ; then
		echo "already online"
		return 0
	fi

	# restore config
	mv "$renamed" "$conf" && \
	cmd_reload
}


cmd_init() {
	local output dest

	print "Test config..."

	# try to reactivate unreachable configs
	for f in /etc/nginx/conf.d/*.unreachable ; do
		[ -f "$f" ] || continue

		dest=${f:0:-12}
		if [ -f "$dest" ] ; then
			print "[WARNING] cannot activate $f config: $dest exists!"
		else
			mv "$f" "$dest"
		fi
	done

	while true ; do
		output=$(ctl_test -q)
		case $? in
			0)
				break
				;;
			2)
				# for each upstream not reachable,
				for f in $(echo "$output" | grep 'host not found in upstream' | grep -o '/etc/nginx/conf.d/.*' | sed 's/.conf:.*/.conf/g' | sort -u) ; do
					# rename config file
					print "[WARNING] config file disabled: $f (host unreachable)"
					mv "$f" "$f".unreachable
				done
				;;
			*)
				# fatal error
				echo "$output"
				return 1
				;;
		esac
	done

	return 0
}


quiet_mode=false

while [ $# -gt 0 ] ; do
	case $1 in
		-q|--quiet)
			quiet_mode=true
			;;
		-h|--help)
			usage
			exit
			;;
		*)
			break
			;;
	esac
	shift
done

case $1 in
	init|test|reload)
		cmd=$1
		;;
	*)
		usage
		exit 1
		;;
esac
shift

cmd_$cmd "$@"
exit $?
